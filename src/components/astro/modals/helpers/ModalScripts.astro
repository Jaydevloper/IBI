---
type Props = {
  id: string;
  btnId: string;
};
const { id, btnId } = Astro.props;
---

<script is:inline defer define:vars={{ id, btnId }}>
  function initModal() {
    const modal = document.querySelector(`[data-id='${id}']`);
    const modalContent = document.querySelector(`[data-id='${id}-content']`);
    const btn = document?.querySelectorAll(`[data-id='${btnId}']`);
    if (btn && modal && modalContent) {
      btn.forEach((button) => {
        button.addEventListener("click", (event) => {
          event.stopPropagation();
          modal.classList.toggle("open");
          document.body.classList.toggle("bg-gray-900/50");
          function handleClose(e) {
            if (
              !modalContent.contains(e.target) &&
              !button.contains(e.target)
            ) {
              closeModal();
            }
            if (e.type === "keydown" && e.key === "Escape") {
              closeModal();
            }
          }
          function closeModal() {
            modal.classList.remove("open");
            document.body.classList.remove("bg-gray-900/50");
            document.removeEventListener("click", handleClose);
            document.removeEventListener("keydown", handleClose);
          }

          setTimeout(() => {
            document.addEventListener("click", handleClose);
            document.addEventListener("keydown", handleClose);
          }, 0);
        });
      });
    }
  }
  initModal();
  document.addEventListener("astro:after-swap", initModal);
</script>
